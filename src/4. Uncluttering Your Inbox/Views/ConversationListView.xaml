<!-- Licensed to the .NET Foundation under one or more agreements.
     The .NET Foundation licenses this file to you under the MIT license.
     See the LICENSE file in the project root for more information. -->
<DataGrid x:Class="UnclutteringYourInbox.Views.ConversationListView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:glo="clr-namespace:Microsoft.Research.Glo;assembly=GloObject"
          xmlns:items="clr-namespace:UnclutteringYourInbox"
          xmlns:converters="clr-namespace:UnclutteringYourInbox.Views.Converters"
          x:Name="This"
          ItemsSource="{Binding}" 
          HorizontalScrollBarVisibility="Disabled" 
          SelectionUnit="FullRow" SelectionMode="Single"
          VerticalGridLinesBrush="Transparent" HorizontalGridLinesBrush="Transparent"
          BorderBrush="Transparent" BorderThickness="0" Background="Transparent"
          IsTextSearchEnabled="True" TextSearch.TextPath="Subject" CanUserSortColumns="False"
          AutoGenerateColumns="False" HeadersVisibility="None" IsReadOnly="True"
          RowDetailsVisibilityMode="Visible" CanUserReorderColumns="False" CanUserResizeRows="False">
    <DataGrid.CellStyle>
        <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </DataGrid.CellStyle>
    <DataGrid.RowStyle>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderThickness" Value="1" />
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="DarkGray" />
                    <Setter Property="BorderThickness" Value="1" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="#DDDDDD" />
                    <Setter Property="BorderThickness" Value="1" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </DataGrid.RowStyle>
    <DataGrid.Columns>
        <DataGridTemplateColumn Header="Subject" IsReadOnly="True" Width="3*" CanUserSort="False">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate DataType="items:Conversation">
                    <TextBlock Name="SubjectText" TextTrimming="CharacterEllipsis">
                        <TextBlock.Text>
                            <MultiBinding Converter="{converters:TextAnonymizeConverter}">
                                <Binding Path="Subject" />
                                <Binding ElementName="This" Path="Anonymize" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsRead}" Value="False">
                            <Setter TargetName="SubjectText" Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Flag}" Value="Flagged">
                            <Setter TargetName="SubjectText" Property="Foreground" Value="Red"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="Date" IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate DataType="items:Conversation">
                    <Grid>
                        <Grid.Resources>
                            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Date, Converter={x:Static glo:ObjectToStringConverter.Instance}}" 
                                TextTrimming="CharacterEllipsis" HorizontalAlignment="Right"/>
                        <Image Grid.Row="0" Grid.Column="1" Name="AttachmentIcon" Width="14" Height="14" Source="../Icons/Attach.png"
                                Visibility="{Binding HasAttachments,Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}"
                                Margin="4,1,0,1"/>
                        <Image Grid.Row="0" Grid.Column="2" Name="FlagIcon" Source="{Binding Flag, Converter={converters:FlagToIconConverter}}" 
                                Margin="2,1,0,1"/>
                        <Border Grid.Row="0" Grid.Column="3" Name="ActionBorder" BorderThickness="0" CornerRadius="4" HorizontalAlignment="Stretch"
                            Background="Transparent" Margin="2,0">
                            <TextBlock Text="{Binding Converter={converters:ConversationToActionsConverter}}" TextWrapping="Wrap"/>
                        </Border>
                    </Grid>
                    
                    <DataTemplate.Triggers>
                        <!--True Positive-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRepliedTo}" Value="True"/>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{converters:CutoffConverter}">
                                            <Binding Path="ProbabilityOfReply" />
                                            <Binding ElementName="This" Path="CutOff" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ActionBorder" Property="Background" Value="LightGreen"/>
                        </MultiDataTrigger>
                        <!--False Positive-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRepliedTo}" Value="False"/>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{converters:CutoffConverter}">
                                            <Binding Path="ProbabilityOfReply" />
                                            <Binding ElementName="This" Path="CutOff" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ActionBorder" Property="Background" Value="Orange"/>
                        </MultiDataTrigger>
                        <!--False Negative-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRepliedTo}" Value="True"/>
                                <Condition Value="False">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{converters:CutoffConverter}">
                                            <Binding Path="ProbabilityOfReply" />
                                            <Binding ElementName="This" Path="CutOff" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ActionBorder" Property="Background" Value="Pink"/>
                        </MultiDataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
         <DataGrid.RowDetailsTemplate>
            <DataTemplate DataType="items:Conversation">
            <TextBlock Margin="5,0,0,0" Text="{Binding Description}"
                               Foreground="#888888" TextTrimming="CharacterEllipsis"
                               Background="Transparent"/>
        </DataTemplate>
        </DataGrid.RowDetailsTemplate>
    </DataGrid>

